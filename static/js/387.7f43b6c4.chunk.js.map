{"version":3,"file":"static/js/387.7f43b6c4.chunk.js","mappings":"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","sources":["api/api.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.params = {\n\n    api_key: '82214decc1420629edfae943aabed99c',\n    language: 'en-US',\n};\n\n\n\nexport const getTrending = async () => {\n    const { data } = await axios.get(`trending/movie/week`\n    );\n\n    return data;\n};\n\n\n\n\nexport const getMoviesBySearch = async (query) => {\n    const { data } = await axios.get(`search/movie`\n        , {\n            params: {\n                query: query,\n            }\n        })\n\n    return data;\n};\n\nexport const getMoviesById = async movieId => {\n    const { data } = await axios.get(`movie/${movieId}`\n    );\n\n    return data;\n};\n\n\n\nexport const getMovieCast = async movieId => {\n    const { data } = await axios.get(`movie/${movieId}/credits`\n    );\n\n    return data;\n};\n\n\nexport const getMovieReviews = async movieId => {\n    const { data } = await axios.get(`movie/${movieId}/reviews`\n\n    );\n    console.log('data :>> ', data);\n    return data;\n};\n\n\n","import styled from \"styled-components\";\n\nexport const CastList = styled.ul`\nlist-style:none;\ndisplay: flex;\nflex-wrap: wrap;\ngap:20px;\npadding-top:20px;\n`\n\nexport const CastListItem = styled.li`\ndisplay: flex;\nflex-direction: column;\njustify-content:start;\n\ngap:8px;\nwidth:120px;\nborder: 1px solid white;\npadding: 4px;\nfont-size: 12px;\n`\n\nexport const CastListItemImgWrap = styled.div`\ndisplay: block;\nwidth: 100%;\nheight: 180px;\nobject-fit:cover;\nbackground-color: gray;\n\n`","import { getMovieCast } from 'api/api';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CastList, CastListItemImgWrap, CastListItem } from './Cast.styled';\n\nconst BAZE_PATH = 'https://image.tmdb.org/t/p/original';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        const { cast } = await getMovieCast(movieId);\n\n        const makeOdjCast = () =>\n          cast.map(({ name, profile_path, id, character }) => {\n            return {\n              name,\n              poster: BAZE_PATH + profile_path,\n              id,\n              character,\n            };\n          });\n        setCast(makeOdjCast);\n      } catch (err) {\n        console.log(err.message);\n      }\n    };\n    getCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      <CastList>\n        {cast.map(({ name, poster, id, character }) => (\n          <CastListItem key={id}>\n            <CastListItemImgWrap>\n              <img src={poster} alt={name} />\n            </CastListItemImgWrap>\n            <div>\n              <p>{name}</p>\n              <p>\n                Character: <br />\n                {character}\n              </p>\n            </div>\n          </CastListItem>\n        ))}\n      </CastList>\n    </div>\n  );\n};\n// getMovieCast\nexport default Cast;\n"],"names":["axios","api_key","language","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$axios$get","data","wrap","_context","prev","next","sent","abrupt","stop","apply","arguments","getMoviesBySearch","_ref2","_callee2","query","_yield$axios$get2","_context2","params","_x","getMoviesById","_ref3","_callee3","movieId","_yield$axios$get3","_context3","concat","_x2","getMovieCast","_ref4","_callee4","_yield$axios$get4","_context4","_x3","getMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","console","log","_x4","CastList","styled","_templateObject","_taggedTemplateLiteral","CastListItem","_templateObject2","CastListItemImgWrap","_templateObject3","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","getCast","_yield$getMovieCast","_cast","map","name","poster","profile_path","id","character","t0","message","_jsx","children","_jsxs","src","alt"],"sourceRoot":""}